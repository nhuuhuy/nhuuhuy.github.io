@import url(https://fonts.googleapis.com/css?family=Roboto:400,700,900&subset=vietnamese);/*----------------MIXIN-------------------*/
/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
  overflow-x: hidden; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

button:focus,
button:active {
  outline: none; }

* {
  padding: 0;
  margin: 0; }

a, a:hover, a:visited {
  text-decoration: none !important;
  color: #eee; }

li {
  list-style: none; }

ul {
  margin: 0; }

body {
  overflow-x: hidden;
  width: 100%;
  height: 100%;
  position: relative; }

header, nav, aside, section, article, main, footer {
  display: block; }

html {
  font-size: 10px; }
  @media only screen and (max-width: 767px) {
    html {
      font-size: 8px; } }

body {
  background-color: #03113d;
  font-family: Roboto;
  color: #eee; }

.slider-content {
  height: 100vh;
  position: relative; }

.slider-wrapper {
  position: relative;
  padding: 3rem;
  min-width: 300px; }

.slider-title {
  font-size: 7.2rem;
  font-weight: bold;
  margin: 0; }

.slider-sub-title {
  font-size: 4rem;
  font-weight: bold;
  text-align: right;
  margin-top: -0.2em;
  margin-right: 10px; }

.slider-background {
  width: 100%;
  height: 100%;
  background: url(images/memphis-3P2H18r.png) center center no-repeat/90%;
  position: absolute;
  z-index: -1; }

.box {
  position: absolute;
  top: -6rem;
  left: 0;
  width: 20rem;
  height: 30rem;
  z-index: -1; }
  .box .box-line-1 {
    position: absolute;
    bottom: 100%;
    left: 0;
    top: 0;
    right: 0;
    width: 20rem;
    height: 20px;
    background: #5461e3; }
  .box .box-line-2 {
    position: absolute;
    bottom: 100%;
    left: 0;
    top: 0;
    right: 0;
    width: 20px;
    height: 30rem;
    background: #5461e3; }
  .box .box-line-3 {
    position: absolute;
    bottom: 0;
    left: 0;
    top: 100%;
    right: 0;
    width: 20rem;
    height: 20px;
    background: #5461e3; }
  .box .box-line-4 {
    position: absolute;
    bottom: 0;
    left: initial;
    top: 0;
    right: 0;
    width: 20px;
    height: 30rem;
    background: #5461e3; }

.heading {
  font-size: 5rem;
  text-transform: uppercase;
  font-weight: bold;
  line-height: 7rem; }
  .heading-order {
    font-size: 10rem;
    font-weight: bolder; }
    .heading-order i {
      font-size: 2rem;
      margin-left: -2rem;
      color: #5461e3; }

.btn {
  cursor: pointer; }
  .btn-download {
    color: #eee;
    position: relative; }
    .btn-download span {
      position: relative;
      z-index: 1; }
    .btn-download::after {
      content: '';
      display: block;
      z-index: 0;
      transition: all .5s;
      position: absolute;
      bottom: 0;
      left: 0;
      top: 100%;
      right: 0;
      width: 100%;
      height: 4px;
      background: #5461e3; }
    .btn-download:hover::after {
      top: 70%; }
  .btn-default {
    color: #eee;
    background-color: #5461e3;
    border-radius: 0;
    text-align: center;
    padding: 10px 15px;
    font-size: 1.6rem;
    border: none; }

.form-control {
  border-radius: 0;
  background-color: #232a59;
  font-size: 1.8rem;
  padding: 5px 10px;
  color: #eee;
  border: 1px solid #232a59; }
  .form-control::placeholder {
    color: #eee; }
  .form-control:focus, .form-control:hover {
    background-color: #232a59;
    outline: none;
    box-shadow: none;
    border: 1px solid #5461e3; }

.about {
  padding: 8rem 2rem; }
  .about-content {
    padding: 2rem;
    font-size: 1.6rem; }

.skill {
  padding: 0 15px;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  grid-gap: 20px;
  align-items: center;
  padding: 12rem 2rem; }
  .skill .heading {
    width: 100%; }
    @media only screen and (min-width: 1248px) {
      .skill .heading {
        order: 3;
        grid-column: span 2; } }
  .skill-item {
    display: flex;
    justify-content: center;
    align-content: center;
    height: 70px;
    border: 2px solid #232a59;
    padding: 2rem;
    text-align: center;
    font-size: 2rem;
    order: 4;
    cursor: pointer;
    transition: all .5s;
    position: relative; }
    .skill-item:after {
      content: '';
      width: 100%;
      height: 100%;
      position: absolute;
      border: 2px solid #232a59;
      transition: all .5s;
      top: 0; }
    .skill-item:hover {
      border: 2px dashed #5461e3; }
      .skill-item:hover:after {
        transform: scale(1.2, 1.5);
        opacity: 0; }
    @media only screen and (min-width: 1248px) {
      .skill-item:nth-of-type(1), .skill-item:nth-of-type(2) {
        order: 1; } }

.projects {
  padding: 8rem 0;
  text-align: center; }
  .projects-wrapper {
    margin-top: 4rem;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    justify-items: center; }
    @media only screen and (max-width: 1247px) {
      .projects-wrapper {
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); } }
  .projects-item {
    width: 100%;
    height: auto;
    position: relative;
    overflow: hidden; }
    .projects-item img {
      width: 100%; }
    .projects-item * {
      transition: all 0.7s cubic-bezier(0.075, 0.82, 0.165, 1); }
    .projects-item :hover img {
      transform: scale(1.5); }
    .projects-item__back {
      position: absolute;
      top: 0;
      background-color: rgba(35, 42, 89, 0.5);
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: start;
      align-items: start;
      padding: 40px;
      flex-direction: column;
      text-align: left;
      font-size: 1.4rem; }
      .projects-item__back h4 {
        font-size: 2.4rem;
        text-transform: capitalize;
        position: relative; }
        .projects-item__back h4::before {
          content: '';
          position: absolute;
          background-color: #5461e3;
          height: 5px;
          top: -10px;
          width: 0;
          transition: all 1s cubic-bezier(0.075, 0.82, 0.165, 1); }
      .projects-item__back:hover {
        background-color: rgba(35, 42, 89, 0.9); }
        .projects-item__back:hover h4::before {
          width: 60px; }

.education {
  padding: 8rem 2rem;
  /* The actual timeline (the vertical ruler) */
  /* wrapper around content */
  /* The circles on the timeline */
  /* Place the wrapper to the left */
  /* Place the wrapper to the right */
  /* Fix the circle for wrappers on the right side */
  /* The actual content */
  /* Media queries - Responsive timeline on screens less than 600px wide */ }
  .education .timeline {
    position: relative;
    max-width: 1200px;
    margin: 0 auto; }
  .education .timeline::after {
    content: '';
    position: absolute;
    width: 6px;
    background-color: #232a59;
    top: 0;
    bottom: 0;
    left: 50%; }
  .education .wrapper {
    padding: 10px 40px;
    position: relative;
    background-color: inherit;
    width: 50%; }
  .education .wrapper::after {
    content: '';
    position: absolute;
    width: 25px;
    height: 25px;
    right: -16px;
    background-color: #03113d;
    border: 4px solid #5461e3;
    top: 35px;
    border-radius: 50%;
    z-index: 1; }
  .education .left {
    left: 0; }
    .education .left .content {
      flex-direction: row-reverse; }
    .education .left .education-item {
      text-align: right; }
  .education .right {
    left: 50%; }
  .education .right::after {
    left: -10px; }
  .education .content {
    padding: 20px 30px;
    position: relative;
    color: #eee;
    display: flex; }
  .education .education-item__title {
    font-size: 2rem;
    font-weight: bold; }
  .education .education-item__subtitle {
    font-size: 18px;
    text-transform: capitalize;
    margin: 0px; }
  .education .education-item__subject li {
    font-size: 14px; }
  .education-year {
    margin: 0 20px;
    font-size: 3rem;
    font-weight: bold;
    color: #232a59; }
  @media screen and (max-width: 600px) {
    .education {
      /* Place the timelime to the left */
      /* Full-width wrappers */
      /* Make sure that all arrows are pointing leftwards */
      /* Make sure all circles are at the same spot */
      /* Make all right wrappers behave like the left ones */ }
      .education .timeline::after {
        left: 31px; }
      .education .wrapper {
        width: 100%;
        padding-left: 70px;
        padding-right: 25px; }
      .education .wrapper::before {
        left: 60px; }
      .education .left::after,
      .education .right::after {
        left: 21px; }
      .education .right {
        left: 0%; }
      .education .content {
        flex-direction: column !important; }
      .education .education-year {
        margin: 0; }
      .education .left .education-item {
        text-align: left; } }

.experience .heading {
  text-align: center; }

.experience-wrapper {
  display: flex;
  flex-wrap: wrap;
  position: relative;
  padding: 40px 0;
  height: 100%;
  margin: 20px 0; }
  .experience-wrapper::after {
    content: '';
    position: absolute;
    z-index: -1;
    height: 100%;
    width: 70%;
    right: 0;
    top: 0; }

.experience-year {
  display: flex;
  flex-direction: column;
  justify-content: center;
  font-size: 1.8rem;
  margin: 15px; }
  @media only screen and (min-width: 1248px) {
    .experience-year {
      text-align: right; } }
  .experience-year b {
    display: block;
    margin-right: -20px;
    font-size: 9rem;
    color: #232a59;
    line-height: 6rem;
    font-weight: 900; }

.experience-company {
  margin-left: 15px; }
  @media only screen and (min-width: 1248px) {
    .experience-company {
      max-width: 50%; } }
  .experience-company p {
    font-size: 2rem;
    margin: 0;
    line-height: 1.7rem; }
  .experience-company h4 {
    font-size: 2.6rem;
    font-weight: bold; }
  .experience-company ul {
    font-size: 12px; }
    .experience-company ul li {
      list-style: initial;
      margin-left: 20px; }

.contact {
  padding: 8rem 2rem; }
  .contact-form {
    padding: 2rem; }
  .contact #map {
    height: 300px; }
    @media only screen and (min-width: 1248px) {
      .contact #map {
        height: 100%; } }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/